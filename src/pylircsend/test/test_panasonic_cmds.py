'''
Created on Sep 11, 2015

@author: andreas
'''
import unittest

from remote_controls import Panasonic_A75C2665


class Test(unittest.TestCase):

    def test_cmds(self):
        setups = [
            { # 0
                'on_off': 'off', 'temp': 24, 'mode':'cool', 'fan_speed': 'auto', 'air_dir': 'auto',
                'expect': '0100000000000100000001110010000000000000 0 000 110 00 00011 0000000001 1111 0101 000000000000000001100000000001100000000000000000000000010000000001100000 10000001'
            }, 
            { # 1
                'on_off': 'on', 'temp': 24, 'mode':'cool', 'fan_speed': 'auto', 'air_dir': 'auto',
                'expect': '0100000000000100000001110010000000000000 1 000 110 00 00011 0000000001 1111 0101 000000000000000001100000000001100000000000000000000000010000000001100000 01000001',
            },
            { # 2
                'on_off': 'on', 'temp': 25, 'mode':'cool', 'fan_speed': 'auto', 'air_dir': 'auto',
                'expect': '0100000000000100000001110010000000000000 1 000 110 00 10011 0000000001 1111 0101 000000000000000001100000000001100000000000000000000000010000000001100000 00100001',
            },
            { # 3
                'on_off': 'on', 'temp': 25, 'mode':'cool', 'fan_speed': 'high', 'air_dir': 'auto',
                'expect': '0100000000000100000001110010000000000000 1 000 110 00 10011 0000000001 1111 1110 000000000000000001100000000001100000000000000000000000010000000001100000 00101010',
            },
            { # 4
                'on_off': 'on', 'temp': 25, 'mode':'cool', 'fan_speed': 'high', 'air_dir': '1',
                'expect': '0100000000000100000001110010000000000000 1 000 110 00 10011 0000000001 1000 1110 000000000000000001100000000001100000000000000000000000010000000001100000 01100010',
            },
            { # 5 
                'on_off': 'on', 'temp': 25, 'mode':'cool', 'fan_speed': 'high', 'air_dir': '5',
                'expect': '0100000000000100000001110010000000000000 1 000 110 00 10011 0000000001 1010 1110 000000000000000001100000000001100000000000000000000000010000000001100000 01010010',
            },
            { # 6
                'on_off': 'on', 'temp': 25, 'mode':'cool', 'fan_speed': 'high', 'air_dir': '3',
                'expect': '0100000000000100000001110010000000000000 1 000 110 00 10011 0000000001 1100 1110 000000000000000001100000000001100000000000000000000000010000000001100000 00010010',
            },
            { # 7
                'on_off': 'on', 'temp': 25, 'mode':'cool', 'fan_speed': 'high', 'air_dir': '4',
                'expect': '0100000000000100000001110010000000000000 1 000 110 00 10011 0000000001 0010 1110 000000000000000001100000000001100000000000000000000000010000000001100000 10010010',
            },
            { # 8
                'on_off': 'on', 'temp': 25, 'mode':'cool', 'fan_speed': 'high', 'air_dir': '2',
                'expect': '0100000000000100000001110010000000000000 1 000 110 00 10011 0000000001 0100 1110 000000000000000001100000000001100000000000000000000000010000000001100000 11100010',
            },
            { # 9
                'on_off': 'on', 'temp': 25, 'mode':'cool', 'fan_speed': 'low', 'air_dir': 'auto',
                'expect': '0100000000000100000001110010000000000000 1 000 110 00 10011 0000000001 1111 1100 000000000000000001100000000001100000000000000000000000010000000001100000 00101000',
            },
            { # 10
                'on_off': 'on', 'temp': 25, 'mode':'cool', 'fan_speed': 'medium', 'air_dir': 'auto',
                'expect': '0100000000000100000001110010000000000000 1 000 110 00 10011 0000000001 1111 1010 000000000000000001100000000001100000000000000000000000010000000001100000 00101100',
            },
            { # 11 - does not work. temperature wrong. in mode 1 not relevant?
                'on_off': 'on', 'temp': 26, 'mode':'1', 'fan_speed': 'auto', 'air_dir': 'auto',
                'expect': '0100000000000100000001110010000000000000 1 000 000 00 00001 1100000001 1111 0101 000000000000000001100000000001100000000000000000000000010000000001100000 01000000',
                'ignore': True
            },
            { # 12
                'on_off': 'on', 'temp': 26, 'mode':'2', 'fan_speed': 'auto', 'air_dir': 'auto',
                'expect': '0100000000000100000001110010000000000000 1 000 001 00 01011 0000000001 1111 0101 000000000000000001100000000001100000000000000000000000010000000001100000 01101001',
            },
            { # 13
                'on_off': 'on', 'temp': 26, 'mode':'cool', 'fan_speed': 'high', 'air_dir': 'auto',
                'expect': '0100000000000100000001110010000000000000 1 000 110 00 01011 0000000001 1111 1110 000000000000000001100000000001100000000000000000000000010000000001100000 01101010',
            },
            { # 14
                'on_off': 'on', 'temp': 26, 'mode':'4', 'fan_speed': 'auto', 'air_dir': 'auto',
                'expect': '0100000000000100000001110010000000000000 1 000 010 00 00011 0000000001 1111 0101 000000000000000001100000000001100000000000000000000000010000000001100000 01001110',
                'ignore': True
            },
            { # 15
                'on_off': 'on', 'temp': 26, 'mode':'cool', 'fan_speed': 'high', 'air_dir': 'auto',
                'expect': '0100000000000100000001110010000000000000 1 000 110 00 01011 0000000001 1111 1110 000000000000000001100000000001100000000000000000000000010000000001100000 01101010',
            }
        ]
             
                    
        self.maxDiff = None
        rc = Panasonic_A75C2665()
        
        i = 0
        for setup in setups:

            
            print('Test loop {0}'.format(i))
            
            if 'ignore' in setup.keys():
                print('ignored')
                i += 1
                continue
            
            s = setup['expect'].replace(' ', '')
            s1_list = [int(c) for c in s]
        
            rc.update_bitstring(setup)
        
            res = ''.join(['{0}'.format(c) for c in rc.data])
        
            print('expected: ', s)
            print('returned: ', res)
        
            self.assertEqual(rc.data, s1_list)
        
            i += 1
            
if __name__ == "__main__":
    #import sys;sys.argv = ['', 'Test.testName']
    unittest.main()